%%
%% Listings and Listing Styles.
%%
%
\RequirePackage{listings}%
%
\def\@lstbasicstyle{\small\color{listing-text-color}\linespread{1.0}\lst@ifdisplaystyle\small\fi\ttfamily{}}%
%
\newsavebox\@lst@mypostbreak%
\savebox\@lst@mypostbreak{\textcolor{red}{$\hookrightarrow$}\space}%
%
\lstdefinestyle{basic_style}{%
backgroundcolor=\color{listing-background},%
numbers=left,%
frame=single,%
rulecolor=\color{listing-rule},%
frameround=ffff,%
breaklines=true,%
tabsize=4,%
sensitive=true,%
basicstyle=\@lstbasicstyle,%
identifierstyle=\color{listing-identifier},%
numberstyle=\color{listing-line-numbers},%
keywordstyle=\color{listing-keyword-1}\bfseries,%
emphstyle=\color{listing-emph-1}\bfseries,%
emphstyle=[2]\color{listing-emph-2},%
emphstyle=[3]\color{listing-emph-3},%
emphstyle=[4]\color{listing-emph-4}\bfseries,%
emphstyle=[5]\color{listing-emph-5},%
emphstyle=[6]\color{listing-emph-6},%
emphstyle=[7]\color{listing-emph-7}\bfseries,%
emphstyle={[8]\color{listing-emph-8}\bfseries},%
keywordstyle={[2]\color{listing-keyword-2}\bfseries},%
keywordstyle={[3]\color{listing-keyword-3}\bfseries\itshape},%
commentstyle=\itshape\color{listing-comment},%
stringstyle=\color{listing-string},%
showspaces=false,%
showtabs=false,%
showstringspaces=false,%
postbreak=\usebox\@lst@mypostbreak,%
%
literate=%
{á}{{\'a}}1 {é}{{\'e}}1 {í}{{\'i}}1 {ó}{{\'o}}1 {ú}{{\'u}}1%
{Á}{{\'A}}1 {É}{{\'E}}1 {Í}{{\'I}}1 {Ó}{{\'O}}1 {Ú}{{\'U}}1%
{à}{{\`a}}1 {è}{{\'e}}1 {ì}{{\`i}}1 {ò}{{\`o}}1 {ù}{{\`u}}1%
{À}{{\`A}}1 {È}{{\'E}}1 {Ì}{{\`I}}1 {Ò}{{\`O}}1 {Ù}{{\`U}}1%
{ä}{{\"a}}1 {ë}{{\"e}}1 {ï}{{\"i}}1 {ö}{{\"o}}1 {ü}{{\"u}}1%
{Ä}{{\"A}}1 {Ë}{{\"E}}1 {Ï}{{\"I}}1 {Ö}{{\"O}}1 {Ü}{{\"U}}1%
{â}{{\^a}}1 {ê}{{\^e}}1 {î}{{\^i}}1 {ô}{{\^o}}1 {û}{{\^u}}1%
{Â}{{\^A}}1 {Ê}{{\^E}}1 {Î}{{\^I}}1 {Ô}{{\^O}}1 {Û}{{\^U}}1%
{œ}{{\oe}}1 {Œ}{{\OE}}1 {æ}{{\ae}}1 {Æ}{{\AE}}1 {ß}{{\ss}}1%
{ç}{{\c c}}1 {Ç}{{\c C}}1 {ø}{{\o}}1 {å}{{\r a}}1 {Å}{{\r A}}1%
{š}{{\v{s}}}1%
{€}{{\EUR}}1 {£}{{\pounds}}1 {«}{{\guillemotleft}}1%
{»}{{\guillemotright}}1 {ñ}{{\~n}}1 {Ñ}{{\~N}}1 {¿}{{?`}}1%
{…}{{\ldots}}1 {≥}{{>=}}1 {≤}{{<=}}1 {„}{{\glqq}}1 {“}{{\grqq}}1%
{━}{{\textbf{-}}}1%
{”}{{''}}1%
{α}{{$\alpha$}}1 {β}{{$\beta$}}1 {γ}{{$\gamma$}}1 {δ}{{$\delta$}}1%
{ε}{{$\epsilon$}}1 {ζ}{{$\zeta$}}1 {η}{{$\eta$}}1 {θ}{{$\theta$}}1%
{ι}{{$\iota$}}1 {κ}{{$\kappa$}}1 {λ}{{$\lambda$}}1 {μ}{{$\mu$}}1%
{ν}{{$\nu$}}1 {ξ}{{$\xi$}}1 {ο}{{o}}1 {π}{{$\pi$}}1 {ρ}{{$\rho$}}1%
{σ}{{$\sigma$}}1 {τ}{{$\tau$}}1 {υ}{{$\upsilon$}}1 {φ}{{$\phi$}}1%
{χ}{{$\chi$}}1 {ψ}{{$\psi$}}1 {ω}{{$\omega$}}1 {Α}{{A}}1 {Β}{{B}}1%
{Γ}{{$\Gamma$}}1 {Δ}{{$\Delta$}}1 {Ε}{{E}}1 {Ζ}{{Z}}1 {Η}{{H}}1%
{Θ}{{$\Theta$}}1 {Ι}{{I}}1 {Κ}{{K}}1 {Λ}{{$\Lambda$}}1 {Μ}{{M}}1%
{Ν}{{N}}1 {Ξ}{{$\Xi$}}1 {Ο}{{O}}1 {Π}{{$\Pi$}}1 {Ρ}{{P}}1%
{Σ}{{$\Sigma$}}1 {Τ}{{T}}1 {Υ}{{Y}}1 {Φ}{{$\Phi$}}1 {Χ}{{X}}1%
{Ψ}{{$\Psi$}}1 {Ω}{{$\Omega$}}1%
{∖}{{$\setminus$}}1 {∪}{{$\cup$}}1 {∩}{{$\cap$}}1%
{≈}{{$\approx$}}1 {∈}{{$\in$}}1 {∉}{{$\notin$}}1%
{√}{{\raisebox{0.55ex}{$\sqrt{\relax}$}}}1%
{²}{{\textsuperscript{2}}}1{³}{{\textsuperscript{3}}}1%
{∫}{{$\int$}}1%
}%
%
\lstdefinestyle{python_style}{%
style=basic_style,%
language=Python,%
otherkeywords={\%,\},\{,\&,\|},%
emph={and,assert,break,class,continue,def,del,elif,else,except,exec,finally,for,from,global,if,import,in,lambda,not,or,pass,print,raise,return,try,while,with,yield},%
emph={[2]Ellipsis,False,None,NotImplemented,True},%
emph={[3]append,deepcopy,dict,enumerate,execfile,imag,isinstance,len,list,object,range,real,reduce,repr,reversed,set,str,tuple,type,xrange,zip},%
emph={[4]ArithmeticError,AssertionError,AttributeError,BaseException,BlockingIOError,BrokenPipeError,BufferError,ChildProcessError,ConnectionAbortedError,ConnectionError,ConnectionRefusedError,ConnectionResetError,EOFError,Exception,FileExistsError,FileNotFoundError,FloatingPointError,GeneratorExit,ImportError,IndentationError,IndexError,IsADirectoryError,KeyboardInterrupt,KeyError,LookupError,MemoryError,ModuleNotFoundError,NameError,NotADirectoryError,NotImplementedError,OSError,OverflowError,PermissionError,ProcessLookupError,PythonFinalizationError,RecursionError,ReferenceError,RuntimeError,StopAsyncIteration,StopIteration,SyntaxError,SystemError,SystemExit,TabError,TimeoutError,TypeError,UnboundLocalError,UnicodeDecodeError,UnicodeEncodeError,UnicodeError,UnicodeTranslateError,ValueError,ZeroDivisionError,},%
emph={[5]__abs__,__add__,__aenter__,__aexit__,__aiter__,__all__,__and__,__anext__,__await__,__bases__,__bool__,__buffer__,__bytes__,__call__,__ceil__,__class__,__class_getitem__,__classcell__,__complex__,__contains__,__copy__,__covariant__,__debug__,__deepcopy__,__defaults__,__del__,__delattr__,__delete__,__delitem__,__dict__,__dir__,__div__,__divmod__,__doc__,__dunder__,__enter__,__eq__,__exit__,__file__,__float__,__floor__,__floordiv__,__format__,__fspath__,__func__,__future__,__ge__,__get__,__getattr__,__getattribute__,__getitem__,__getnewargs__,__getnewargs_ex__,__getstate__,__gt__,__hash__,__iadd__,__iand__,__ifloordiv__,__ilshift__,__imatmul__,__imod__,__imul__,__index__,__init__,__init_subclass__,__instancecheck__,__int__,__invert__,__ior__,__ipow__,__irshift__,__isub__,__iter__,__itruediv__,__ixor__,__le__,__len__,__length_hint__,__loader__,__lshift__,__lt__,__match_args__,__matmul__,__missing__,__mod__,__module__,__mro__,__mro_entries__,__mul__,__name__,__ne__,__neg__,__new__,__next__,__nonzero__,__objclass__,__or__,__origin__,__path__,__pos__,__post_init__,__pow__,__prepare__,__qualname__,__radd__,__rand__,__rdivmod__,__reduce__,__reduce_ex__,__release_buffer__,__replace__,__repr__,__reversed__,__rfloordiv__,__rlshift__,__rmatmul__,__rmod__,__rmul__,__ror__,__round__,__rpow__,__rrshift__,__rshift__,__rsub__,__rt__,__rtruediv__,__rvidmod__,__rxor__,__set__,__set_name__,__setattr__,__setitem__,__setstate__,__sizeof__,__slots__,__static_attributes__,__stdout__,__str__,__sub__,__subclasscheck__,__subclasses__,__subclasshook__,__traceback__,__truediv__,__trunc__,__version__,__weakref__,__wrapped__,__xor__},%
morestring=[s]{"""}{"""},%
}%
\lstset{style=python_style}%
%
%
\lstdefinestyle{xml_style}{%
style=basic_style,%
language=XML,%
}%
%
%
\lstdefinestyle{text_style}{%
style=basic_style,%
language={},%
basicstyle=\@lstbasicstyle,%
identifierstyle=\@lstbasicstyle,%
keywords={},%
otherkeywords={},%
keywordstyle=\@lstbasicstyle,%
emphstyle=\@lstbasicstyle,%
commentstyle=\@lstbasicstyle,%
stringstyle=\@lstbasicstyle,%
keywordstyle={[2]\@lstbasicstyle},%
keywordstyle={[3]\@lstbasicstyle},%
keywordstyle={[4]\@lstbasicstyle},%
keywordstyle={[5]\@lstbasicstyle},%
keywordstyle={[6]\@lstbasicstyle},%
keywordstyle={[7]\@lstbasicstyle},%
emph={[2]},%
emphstyle={[2]\@lstbasicstyle},%
emph={[3]},%
emphstyle={[3]\@lstbasicstyle},%
emph={[4]},%
emphstyle={[4]\@lstbasicstyle},%
emph={[5]},%
emphstyle={[5]\@lstbasicstyle},%
emph={[6]},%
emphstyle={[6]\@lstbasicstyle},%
emph={[7]},%
emphstyle={[7]\@lstbasicstyle},%
emph={[8]},%
emphstyle={[8]\@lstbasicstyle},%
breaklines=true%
}%
%
%
\lstdefinestyle{bash_style}{%
style=basic_style,%
language=bash,%
}%
%
%
\lstdefinestyle{bat_style}{%
style=basic_style,%
language=command.com,%
}%
%
%
\lstdefinestyle{tool_style}{%
style=text_style,%
morecomment=[f][\color{listing-tool-command}][0]{\$ },
morecomment=[f][\color{listing-tool-result}][0]{\# },
breaklines=true%
}%
%
%
%% the box around the inline listings
\protected\gdef\inlinelistingbox#1{\bgroup%
\fboxsep=0.5pt%
\fboxrule=0.5pt%
\mbox{\fcolorbox{listing-rule}{listing-background}{\mbox{#1}}}%
\egroup}%
%
%% print some text inline
%% #1 the optional args
%% #2 the code to be printed inline
\gdef\textil#1{%
\inlinelistingbox{\lstinline[style=text_style]$#1$}}%
%
%% print some Python code inline
%% #1 the optional args
%% #2 the code to be printed inline
\gdef\pythonil#1{%
\inlinelistingbox{\lstinline[style=python_style]$#1$}}%
%
%% print some Bash code inline
%% #1 the optional args
%% #2 the code to be printed inline
\gdef\bashil#1{%
\inlinelistingbox{\lstinline[style=bash_style]$#1$}}%
%
%% print some BAT code inline
%% #1 the optional args
%% #2 the code to be printed inline
\gdef\batil#1{%
\inlinelistingbox{\lstinline[style=bat_style]$#1$}}%
%
%% print some xml inline
%% #1 the optional args
%% #2 the code to be printed inline
\gdef\xmlil#1{%
\inlinelistingbox{\lstinline[style=xml_style]$#1$}}%
%
%
\newlength\@lstbasicstylesheight%
\settoheight{\@lstbasicstylesheight}{\mbox{\bgroup\@lstbasicstyle{s}\egroup}}%
%
%% print some Python code inline with an 's' added for plural
%% #1 the optional args
%% #2 the code to be printed inline
\gdef\pythonils#1{%
\inlinelistingbox{\lstinline[style=python_style]$#1$\resizebox{!}{\@lstbasicstylesheight}{\color{darkgray}s}}}%
%
%% print some Python code inline with an 'es' added for plural
%% #1 the optional args
%% #2 the code to be printed inline
\gdef\pythoniles#1{%
\inlinelistingbox{\lstinline[style=python_style]$#1$\resizebox{!}{\@lstbasicstylesheight}{\color{darkgray}es}}}%
%
%% A dunder method
%% #1 the method name
%% This addss the underscores and a index entry.
\protected\gdef\dunder#1{\expandafter\pythonilIdx{\_\_#1\_\_}\expandafter\pythonIdx{dunder!\_\_#1\_\_}}%
%
